{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "IsProduction": {
            "type": "bool",
            "metadata": {
                "description": "Is Production?"
            }
        },

        "EnvironmentStage": {
            "type": "string",
            "allowedValues": [
                "dev",
                "qa",
                "stg",
                "prod"
            ]
        },
        "InstanceUniqueName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 11
        },
        "TopLevelDomain": {
            "type": "string",
            "allowedValues": [
                "io",
                "eu",
                "com"
            ]
        },
        "administratorLogin": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "MySQL Database administrator login name"
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "minLength": 8,
            "maxLength": 128,
            "metadata": {
                "description": "MySQL Database administrator password"
            }
        }
    },
    "variables": {
        "commonId": "[concat(parameters('InstanceUniqueName'), parameters('EnvironmentStage'),parameters('TopLevelDomain'))]",
        "resourcesNamespace": "[concat(parameters('InstanceUniqueName'), parameters('EnvironmentStage'), '-', parameters('TopLevelDomain'))]",
        "storageAccountName": "[concat('strg',variables('commonId'))]",
        "applicationConfigBucket": "[concat(variables('resourcesNamespace'), '-application-config')]",
        "encryptedBucket": "[concat(variables('resourcesNamespace'), '-encrypted-bucket')]",
        "mySqlServerName": "[concat('mysql-', variables('resourcesNamespace'))]",
        "cosmosName": "[concat('cosmos-', variables('resourcesNamespace'))]",
        "serviceBusName": "[concat('servicebus-', variables('resourcesNamespace'))]",
        "cosmosTenantdb":"[concat(variables('resourcesNamespace'),'-contentsync','-tenant')]",
        "queueName": "[concat(variables('resourcesNamespace'), '-etl-process-v1')]",
        "renewalTopicName": "[concat(variables('resourcesNamespace'), '-etl_renewal_worker_start')]",
        "mappingTopicName": "[concat(variables('resourcesNamespace'), '-etl_mapping_worker_start')]",
        "reloadTopicName": "[concat(variables('resourcesNamespace'), '-systemauth_reload')]",
        "webServerName": "[concat(variables('resourcesNamespace'), '-api-app-srvr')]",
        "apiSitesName": "[concat(variables('resourcesNamespace'), '-etl-api')]",
        "renewalSiteName": "[concat(variables('resourcesNamespace'), '-etl-renewal')]",
        "mappingSiteName": "[concat(variables('resourcesNamespace'), '-etl-mapping')]",
        "processSiteName": "[concat(variables('resourcesNamespace'), '-etl-process')]",
        "Location": "[resourceGroup().location]",
        "apiVersion": "/api/v1",
        "authorizationRulesName": "RootManageSharedAccessKey",
        "apiAppInsightsName": "[concat(variables('resourcesNamespace'), '-etl-api')]",
        "renewalAppInsightsName": "[concat(variables('resourcesNamespace'), '-etl-renewal')]",
        "mappingAppInsightsName": "[concat(variables('resourcesNamespace'), '-etl-mapping')]",
        "processAppInsightsName": "[concat(variables('resourcesNamespace'), '-etl-process')]",
        "readeranddataaccess": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'c12c1c16-33a1-487b-954d-41c89c60f349')]",
        "strgkeyoperator": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '81a9662b-bebf-436f-a333-f67b29880f12')]",
        "owner" : "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "sbdataowner" : "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '090c5cfd-751d-490a-894a-3ce6f1109419')]",
        "strgBlobDataOwner" : "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
        "raApiSitesName" : "[guid(resourceId('Microsoft.Web/sites', variables('apiSitesName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('readeranddataaccess'))]",
        "rarenewalSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('renewalSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('readeranddataaccess'))]",
        "ramappingSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('mappingSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('readeranddataaccess'))]",
        "raprocessSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('processSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('readeranddataaccess'))]",
        "skapiSitesName" : "[guid(resourceId('Microsoft.Web/sites', variables('apiSitesName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('strgkeyoperator'))]",
        "skrenewalSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('renewalSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('strgkeyoperator'))]",
        "skmappingSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('mappingSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('strgkeyoperator'))]",
        "skprocessSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('processSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('strgkeyoperator'))]",
        "sbapiSitesName" : "[guid(resourceId('Microsoft.Web/sites', variables('apiSitesName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('owner'))]",
        "sbrenewalSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('renewalSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('owner'))]",
        "sbmappingSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('mappingSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('owner'))]",
        "sbprocessSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('processSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('owner'))]",
        "sbdataownerapiSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('apiSitesName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('sbdataowner'))]",
        "sbdataownerrenewalSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('renewalSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('sbdataowner'))]",
        "sbdataownermappingSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('mappingSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('sbdataowner'))]",
        "sbdataownerprocessSiteName" : "[guid(resourceId('Microsoft.Web/sites', variables('processSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('sbdataowner'))]",
        "strgBlobOwnerApiSite" : "[guid(resourceId('Microsoft.Web/sites', variables('apiSitesName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('strgBlobDataOwner'))]",
        "strgBlobOwnerRenewalSite" : "[guid(resourceId('Microsoft.Web/sites', variables('renewalSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('strgBlobDataOwner'))]",
        "strgBlobOwnerMappingSite" : "[guid(resourceId('Microsoft.Web/sites', variables('mappingSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('strgBlobDataOwner'))]",
        "strgBlobOwnerProcessSite" : "[guid(resourceId('Microsoft.Web/sites', variables('processSiteName')), resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('strgBlobDataOwner'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2020-08-01-preview",
            "name": "[variables('storageAccountName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            },

            "resources": [
                {
                    "type": "Microsoft.Storage/storageAccounts/encryptionScopes",
                    "apiVersion": "2020-08-01-preview",
                    "name": "[concat(variables('storageAccountName'), '/DataAtRest')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ],
                    "properties": {
                        "source": "Microsoft.Storage",
                        "state": "Enabled"
                    }
                },
                {
                    "type": "Microsoft.Storage/storageAccounts/blobServices",
                    "apiVersion": "2020-08-01-preview",
                    "name": "[concat(variables('storageAccountName'), '/default')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ],
                    "sku": {
                        "name": "Standard_RAGRS",
                        "tier": "Standard"
                    },
                    "properties": {
                        "cors": {
                            "corsRules": []
                        },
                        "deleteRetentionPolicy": {
                            "enabled": false
                        }
                    },
                    "resources": [    
                        {
                            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                            "apiVersion": "2020-08-01-preview",
                            "name": "[concat(variables('storageAccountName'), '/default/', variables('applicationConfigBucket'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                            ],
                            "properties": {
                                "defaultEncryptionScope": "$account-encryption-key",
                                "denyEncryptionScopeOverride": false,
                                "publicAccess": "None"
                            }
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                            "apiVersion": "2020-08-01-preview",
                            "name": "[concat(variables('storageAccountName'), '/default/', variables('encryptedBucket'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                                "[resourceId('Microsoft.Storage/storageAccounts/encryptionScopes', variables('storageAccountName'), 'DataAtRest')]",
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                                
                            ],
                            "properties": {
                                "defaultEncryptionScope": "DataAtRest",
                                "denyEncryptionScopeOverride": true,
                                "publicAccess": "None"
                            }
                        }
                    ]
                }
            ]
        },

         {  
            "scope" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
           "name" : "[variables('raApiSitesName')]",
            "properties": {
                "roleDefinitionId": "[variables('readeranddataaccess')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('apiSitesName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
                
            }
        },
         {
            "scope" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name" : "[variables('rarenewalSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('readeranddataaccess')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('renewalSiteName')), '2018-02-01', 'Full').identity.principalId]"
            }
        },
         {
            "scope" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name" : "[variables('ramappingSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('readeranddataaccess')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('mappingSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
            }
        },   
         {
            "scope" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name" : "[variables('raprocessSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('readeranddataaccess')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('processSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
            }
        }, 
         {
            "scope" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name" : "[variables('skapiSitesName')]",
            "properties": {
                "roleDefinitionId": "[variables('strgkeyoperator')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('apiSitesName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
            }
        },      
         {
            "scope" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name" : "[variables('skrenewalSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('strgkeyoperator')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('renewalSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
            }
        },      
         {
            "scope" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name" : "[variables('skmappingSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('strgkeyoperator')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('mappingSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
            }
        },      
         {
            "scope" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name" : "[variables('skprocessSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('strgkeyoperator')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('processSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
            }
        },
        {
            "scope" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name" : "[variables('strgBlobOwnerApiSite')]",
            "properties": {
                "roleDefinitionId": "[variables('strgBlobDataOwner')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('apiSitesName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
            }
        },  {
            "scope" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name" : "[variables('strgBlobOwnerRenewalSite')]",
            "properties": {
                "roleDefinitionId": "[variables('strgBlobDataOwner')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('renewalSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
            }
        },  {
            "scope" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name" : "[variables('strgBlobOwnerMappingSite')]",
            "properties": {
                "roleDefinitionId": "[variables('strgBlobDataOwner')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('mappingSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
            }
        },  {
            "scope" : "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name" : "[variables('strgBlobOwnerProcessSite')]",
            "properties": {
                "roleDefinitionId": "[variables('strgBlobDataOwner')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('processSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
            }
        },                          
        {
            "type": "Microsoft.DBforMySQL/servers",
            "apiVersion": "2017-12-01",
            "name": "[variables('mySqlServerName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "B_Gen5_1",
                "tier": "Basic",
                "family": "Gen5",
                "capacity": 1
            },
            "properties": {
                "createMode": "Default",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "storageProfile": {
                    "storageMB": 30720,
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled",
                    "storageAutogrow": "Enabled"
                },
                "version": "5.7",
                "sslEnforcement": "Disabled",
                "minimalTlsVersion": "TLSEnforcementDisabled",
                "infrastructureEncryption": "Disabled",
                "publicNetworkAccess": "Enabled"
            },
            "resources": [
                {
                    "type": "Microsoft.DBForMySQL/servers/databases",
                    "apiVersion": "2017-12-01",
                    "name": "[concat(variables('mySqlServerName'), '/', variables('commonId'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DBforMySQL/servers', variables('mySqlServerName'))]"
                    ],
                    "properties": {
                        "charset": "utf8",
                        "collation": "utf8_general_ci"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2020-09-01",
            "name": "[variables('cosmosName')]",
            "location": "[variables('location')]",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": "",
                "CosmosAccountType": "[if(equals(parameters('IsProduction'),'true'), 'Production', 'Non-Production')]"
            },
            "kind": "GlobalDocumentDB",
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Strong",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "[variables('location')]",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities":  [
                    {
                        "name": "EnableServerless"
                    }
                ],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8
                    }
                }
            },
            "resources": [
                {
                    "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
                    "apiVersion": "2020-09-01",
                    "name": "[concat(variables('cosmosName'), '/', variables('commonId'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosName'))]"
                    ],        
                    "properties": {
                        "resource": {
                            "id": "[variables('commonId')]"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                            "apiVersion": "2020-09-01",
                            "name": "[concat(variables('cosmosName'), '/', variables('commonId'), '/', variables('cosmosTenantdb'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosName'), variables('commonId'))]",
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosName'))]"
                            ],
                            "properties": {
                                "resource": {
                                    "id": "[concat(variables('cosmosTenantdb'))]",
                                    "indexingPolicy": {
                                        "indexingMode": "consistent",
                                        "automatic": true,
                                        "includedPaths": [
                                            {
                                                "path": "/*"
                                            }
                                        ],
                                        "excludedPaths": [
                                            {
                                                "path": "/\"_etag\"/?"
                                            }
                                        ]
                                    },
                                    "partitionKey": {
                                        "paths": [
                                            "/tenantId"
                                        ],
                                        "kind": "Hash"
                                    },
                                    "uniqueKeyPolicy": {
                                        "uniqueKeys": []
                                    },
                                    "conflictResolutionPolicy": {
                                        "mode": "LastWriterWins",
                                        "conflictResolutionPath": "/_ts"
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                            "apiVersion": "2020-09-01",
                            "name": "[concat(variables('cosmosName'), '/', variables('commonId'), '/', variables('resourcesNamespace'), '-etl-auth')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosName'), variables('commonId'))]",
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosName'))]"
                            ],
                            "properties": {
                                "resource": {
                                    "id": "[concat(variables('resourcesNamespace'), '-etl-auth')]",
                                    "indexingPolicy": {
                                        "indexingMode": "consistent",
                                        "automatic": true,
                                        "includedPaths": [
                                            {
                                                "path": "/*"
                                            }
                                        ],
                                        "excludedPaths": [
                                            {
                                                "path": "/\"_etag\"/?"
                                            }
                                        ]
                                    },
                                    "partitionKey": {
                                        "paths": [
                                            "/tenantId"
                                        ],
                                        "kind": "Hash"
                                    },
                                    "uniqueKeyPolicy": {
                                        "uniqueKeys": [
                                            {
                                                "paths": [
                                                    "/authId"
                                                ]
                                            }
                                        ]
                                    },
                                    "conflictResolutionPolicy": {
                                        "mode": "LastWriterWins",
                                        "conflictResolutionPath": "/_ts"
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                            "apiVersion": "2020-09-01",
                            "name": "[concat(variables('cosmosName'), '/', variables('commonId'), '/', variables('resourcesNamespace'), '-etl-job')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosName'), variables('commonId'))]",
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosName'))]"
                            ],
                            "properties": {
                                "resource": {
                                    "id": "[concat(variables('resourcesNamespace'), '-etl-job')]",
                                    "indexingPolicy": {
                                        "indexingMode": "consistent",
                                        "automatic": true,
                                        "includedPaths": [
                                            {
                                                "path": "/*"
                                            }
                                        ],
                                        "excludedPaths": [
                                            {
                                                "path": "/\"_etag\"/?"
                                            }
                                        ]
                                    },
                                    "partitionKey": {
                                        "paths": [
                                            "/tenantId"
                                        ],
                                        "kind": "Hash"
                                    },
                                    "uniqueKeyPolicy": {
                                        "uniqueKeys": [
                                            {
                                                "paths": [
                                                    "/etlJobId"
                                                ]
                                            }
                                        ]
                                    },
                                    "conflictResolutionPolicy": {
                                        "mode": "LastWriterWins",
                                        "conflictResolutionPath": "/_ts"
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                            "apiVersion": "2020-09-01",
                            "name": "[concat(variables('cosmosName'), '/', variables('commonId'), '/', variables('resourcesNamespace'), '-etl-job-items')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosName'), variables('commonId'))]",
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosName'))]"
                            ],
                            "properties": {
                                "resource": {
                                    "id": "[concat(variables('resourcesNamespace'), '-etl-job-items')]",
                                    "indexingPolicy": {
                                        "indexingMode": "consistent",
                                        "automatic": true,
                                        "includedPaths": [
                                            {
                                                "path": "/*"
                                            }
                                        ],
                                        "excludedPaths": [
                                            {
                                                "path": "/\"_etag\"/?"
                                            }
                                        ]
                                    },
                                    "partitionKey": {
                                        "paths": [
                                            "/jobId"
                                        ],
                                        "kind": "Hash"
                                    },
                                    "uniqueKeyPolicy": {
                                        "uniqueKeys": [
                                            {
                                                "paths": [
                                                    "/itemId"
                                                ]
                                            }
                                        ]
                                    },
                                    "conflictResolutionPolicy": {
                                        "mode": "LastWriterWins",
                                        "conflictResolutionPath": "/_ts"
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                            "apiVersion": "2020-09-01",
                            "name": "[concat(variables('cosmosName'), '/', variables('commonId'), '/', variables('resourcesNamespace'), '-etl-mapping')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosName'), variables('commonId'))]",
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosName'))]"
                            ],
                            "properties": {
                                "resource": {
                                    "id": "[concat(variables('resourcesNamespace'), '-etl-mapping')]",
                                    "indexingPolicy": {
                                        "indexingMode": "consistent",
                                        "automatic": true,
                                        "includedPaths": [
                                            {
                                                "path": "/*"
                                            }
                                        ],
                                        "excludedPaths": [
                                            {
                                                "path": "/\"_etag\"/?"
                                            }
                                        ]
                                    },
                                    "partitionKey": {
                                        "paths": [
                                            "/tenantId"
                                        ],
                                        "kind": "Hash"
                                    },
                                    "uniqueKeyPolicy": {
                                        "uniqueKeys": [
                                            {
                                                "paths": [
                                                    "/mappingId"
                                                ]
                                            }
                                        ]
                                    },
                                    "conflictResolutionPolicy": {
                                        "mode": "LastWriterWins",
                                        "conflictResolutionPath": "/_ts"
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                            "apiVersion": "2020-09-01",
                            "name": "[concat(variables('cosmosName'), '/', variables('commonId'), '/', variables('resourcesNamespace'), '-etl-office-subscription')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosName'), variables('commonId'))]",
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosName'))]"
                            ],
                            "properties": {
                                "resource": {
                                    "id": "[concat(variables('resourcesNamespace'), '-etl-office-subscription')]",
                                    "indexingPolicy": {
                                        "indexingMode": "consistent",
                                        "automatic": true,
                                        "includedPaths": [
                                            {
                                                "path": "/*"
                                            }
                                        ],
                                        "excludedPaths": [
                                            {
                                                "path": "/\"_etag\"/?"
                                            }
                                        ]
                                    },
                                    "partitionKey": {
                                        "paths": [
                                            "/subscriptionId"
                                        ],
                                        "kind": "Hash"
                                    },
                                    "uniqueKeyPolicy": {
                                        "uniqueKeys": [
                                            {
                                                "paths": [
                                                    "/authId"
                                                ]
                                            }
                                        ]
                                    },
                                    "conflictResolutionPolicy": {
                                        "mode": "LastWriterWins",
                                        "conflictResolutionPath": "/_ts"
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                            "apiVersion": "2020-09-01",
                            "name": "[concat(variables('cosmosName'), '/', variables('commonId'), '/', variables('resourcesNamespace'), '-systemauth')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosName'), variables('commonId'))]",
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosName'))]"
                            ],
                            "properties": {
                                "resource": {
                                    "id": "[concat(variables('resourcesNamespace'), '-systemauth')]",
                                    "indexingPolicy": {
                                        "indexingMode": "consistent",
                                        "automatic": true,
                                        "includedPaths": [
                                            {
                                                "path": "/*"
                                            }
                                        ],
                                        "excludedPaths": [
                                            {
                                                "path": "/\"_etag\"/?"
                                            }
                                        ]
                                    },
                                    "partitionKey": {
                                        "paths": [
                                            "/tenantId"
                                        ],
                                        "kind": "Hash"
                                    },
                                    "uniqueKeyPolicy": {
                                        "uniqueKeys": []
                                    },
                                    "conflictResolutionPolicy": {
                                        "mode": "LastWriterWins",
                                        "conflictResolutionPath": "/_ts"
                                    }
                                }
                            }
                        }
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('serviceBusName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {
                "zoneRedundant": false
            },
            "resources": [
                {
                    "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
                    "apiVersion": "2017-04-01",
                    "name": "[concat(variables('serviceBusName'), '/', variables('authorizationRulesName'))]",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                    ],
                    "properties": {
                        "rights": [
                            "Listen",
                            "Manage",
                            "Send"
                        ]
                    }
                },
                {
                    "type": "Microsoft.ServiceBus/namespaces/queues",
                    "apiVersion": "2018-01-01-preview",
                    "name": "[concat(variables('serviceBusName'), '/', variables('queueName'))]",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                    ],
                    "properties": {
                        "lockDuration": "PT5M",
                        "maxSizeInMegabytes": 1024,
                        "requiresDuplicateDetection": false,
                        "requiresSession": false,
                        "defaultMessageTimeToLive": "P14D",
                        "deadLetteringOnMessageExpiration": false,
                        "enableBatchedOperations": true,
                        "duplicateDetectionHistoryTimeWindow": "PT10M",
                        "maxDeliveryCount": 1,
                        "status": "Active",
                        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                        "enablePartitioning": false,
                        "enableExpress": false
                    }
                },
                {
                    "type": "Microsoft.ServiceBus/namespaces/topics",
                    "apiVersion": "2018-01-01-preview",
                    "name": "[concat(variables('serviceBusName'), '/', variables('renewalTopicName'))]",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                    ],
                    "properties": {
                        "defaultMessageTimeToLive": "P14D",
                        "maxSizeInMegabytes": 1024,
                        "requiresDuplicateDetection": false,
                        "duplicateDetectionHistoryTimeWindow": "PT10M",
                        "enableBatchedOperations": true,
                        "status": "Active",
                        "supportOrdering": true,
                        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                        "enablePartitioning": false,
                        "enableExpress": false
                    },
                    "resources": [
                        {
                            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
                            "apiVersion": "2018-01-01-preview",
                            "name": "[concat(variables('serviceBusName'), '/', variables('renewalTopicName'), '/', variables('renewalTopicName'), '-sub')]",
                            "location": "[variables('location')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.ServiceBus/namespaces/topics', variables('serviceBusName'), variables('renewalTopicName'))]",
                                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                            ],
                            "properties": {
                                "lockDuration": "PT30S",
                                "requiresSession": false,
                                "defaultMessageTimeToLive": "P14D",
                                "deadLetteringOnMessageExpiration": false,
                                "deadLetteringOnFilterEvaluationExceptions": false,
                                "maxDeliveryCount": 1,
                                "status": "Active",
                                "enableBatchedOperations": true,
                                "autoDeleteOnIdle": "P14D"
                            }
                        }
                    ]
                },
                {
                    "type": "Microsoft.ServiceBus/namespaces/topics",
                    "apiVersion": "2018-01-01-preview",
                    "name": "[concat(variables('serviceBusName'), '/', variables('mappingTopicName'))]",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                    ],
                    "properties": {
                        "defaultMessageTimeToLive": "P14D",
                        "maxSizeInMegabytes": 1024,
                        "requiresDuplicateDetection": false,
                        "duplicateDetectionHistoryTimeWindow": "PT10M",
                        "enableBatchedOperations": true,
                        "status": "Active",
                        "supportOrdering": true,
                        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                        "enablePartitioning": false,
                        "enableExpress": false
                    },
                    "resources": [
                        {
                            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
                            "apiVersion": "2018-01-01-preview",
                            "name": "[concat(variables('serviceBusName'), '/', variables('mappingTopicName'), '/', variables('mappingTopicName'), '-sub')]",
                            "location": "[variables('location')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.ServiceBus/namespaces/topics', variables('serviceBusName'), variables('mappingTopicName'))]",
                                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                            ],
                            "properties": {
                                "lockDuration": "PT5M",
                                "requiresSession": false,
                                "defaultMessageTimeToLive": "P14D",
                                "deadLetteringOnMessageExpiration": false,
                                "deadLetteringOnFilterEvaluationExceptions": false,
                                "maxDeliveryCount": 1,
                                "status": "Active",
                                "enableBatchedOperations": true,
                                "autoDeleteOnIdle": "P14D"
                            }
                        }
                    ]
                },
                {
                    "type": "Microsoft.ServiceBus/namespaces/topics",
                    "apiVersion": "2018-01-01-preview",
                    "name": "[concat(variables('serviceBusName'), '/', variables('reloadTopicName'))]",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                    ],
                    "properties": {
                        "defaultMessageTimeToLive": "P14D",
                        "maxSizeInMegabytes": 1024,
                        "requiresDuplicateDetection": false,
                        "duplicateDetectionHistoryTimeWindow": "PT10M",
                        "enableBatchedOperations": true,
                        "status": "Active",
                        "supportOrdering": true,
                        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                        "enablePartitioning": false,
                        "enableExpress": false
                    },
                    "resources": [
                        {
                            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
                            "apiVersion": "2018-01-01-preview",
                            "name": "[concat(variables('serviceBusName'), '/', variables('reloadTopicName'), '/', variables('reloadTopicName'), '-sub')]",
                            "location": "[variables('location')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.ServiceBus/namespaces/topics', variables('serviceBusName'), variables('reloadTopicName'))]",
                                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                            ],
                            "properties": {
                                "lockDuration": "PT30S",
                                "requiresSession": false,
                                "defaultMessageTimeToLive": "P14D",
                                "deadLetteringOnMessageExpiration": false,
                                "deadLetteringOnFilterEvaluationExceptions": false,
                                "maxDeliveryCount": 1,
                                "status": "Active",
                                "enableBatchedOperations": true,
                                "autoDeleteOnIdle": "P14D"
                            }
                        }
                    ]
                }
            ]
        },
        
         {  
            "scope" : "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
           "name" : "[variables('sbapiSitesName')]",
            "properties": {
                "roleDefinitionId": "[variables('owner')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('apiSitesName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
                
            }
        },

         {  
            "scope" : "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
           "name" : "[variables('sbrenewalSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('owner')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('renewalSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
                
            }
        },

         {  
            "scope" : "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
           "name" : "[variables('sbmappingSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('owner')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('mappingSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
                
            }
        },

         {  
            "scope" : "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
           "name" : "[variables('sbprocessSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('owner')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('processSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
                
            }
        },

         {  
            "scope" : "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
           "name" : "[variables('sbdataownerapiSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('sbdataowner')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('apiSitesName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
                
            }
        },

         {  
            "scope" : "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
           "name" : "[variables('sbdataownerrenewalSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('sbdataowner')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('renewalSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
                
            }
        },

         {  
            "scope" : "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
           "name" : "[variables('sbdataownermappingSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('sbdataowner')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('mappingSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
                
            }
        },

         {  
            "scope" : "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusName'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
           "name" : "[variables('sbdataownerprocessSiteName')]",
            "properties": {
                "roleDefinitionId": "[variables('sbdataowner')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('processSiteName')), '2018-02-01', 'Full').identity.principalId]",
                 "principalType": "ServicePrincipal"
                
            }
        },

        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('webServerName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('apiAppInsightsName')]",
            "location": "[variables('Location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "IngestionMode": "ApplicationInsights",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('apiSitesName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webServerName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', variables('apiAppInsightsName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('apiSitesName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('apiSitesName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('webServerName'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "application_group",
                            "value":"[variables('resourcesNamespace')]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsServiceBusConnection",
                            "value": "[concat('Endpoint=sb://', variables('serviceBusName'), '.servicebus.windows.net/;SharedAccessKeyName=', variables('authorizationRulesName') ,';SharedAccessKey=', listKeys(resourceId('Microsoft.ServiceBus/namespaces/AuthorizationRules', variables('serviceBusName'), variables('authorizationRulesName')), '2017-04-01').primaryKey)]"
                        },
                        {
                            "name": "JAVA_OPTS",
                            "value":"-Dfile.encoding=UTF-8"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "config_basepath",
                            "value": "[concat('az:', variables('applicationConfigBucket'))]"
                        },
                        {
                            "name":"cs_ddt_prefix",
                            "value":"[variables('resourcesNamespace')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_JAVA_LOAD_APP_LIBS",
                            "value": "1"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "java"
                        },
                        {
                            "name": "lambda_profile",
                            "value": "[parameters('EnvironmentStage')]"
                        },
                        {
                            "name": "storage_accountname",
                            "value": "[variables('storageAccountName')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
                        },
                        {
                            "name": "api_base_url",
                            "value": "[concat('https://', variables('apiSitesName'), '.azurewebsites.net', variables('apiVersion'))]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('apiAppInsightsName')), '2020-02-02-preview').InstrumentationKey]"

                        },
                        {
                            "name": "service_id",
                            "value": "[variables('apiSitesName')]"
                        },
                        {
                            "name": "service_name",
                            "value": "[variables('apiSitesName')]"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            },
            "resources": [
                {
                    "type": "Extensions",
                    "apiVersion": "2018-11-01",
                    "name": "MSDeploy",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('apiSitesName'))]"
                    ],
                    "properties": {
                        "packageUri": "https://github.com/Prosperoware/cam-azure-deployment/raw/master/etl-api.zip",
                        "setParameters": {
                        }
                    }
                },
                {  
                    "type":"Microsoft.Web/sites/providers/diagnosticsettings",
                    "apiVersion": "2017-05-01-preview",
                    "location": "[variables('location')]",
                    "name":"[concat(variables('apiSitesName'), '/Microsoft.Insights/function-logs')]",
                    "dependsOn":[  
                        "[resourceId('Microsoft.Web/sites', variables('apiSitesName'))]",
                        "[concat('Microsoft.Web/Sites/', variables('apiSitesName'), '/Extensions/MSDeploy')]"
                    ],
                    "properties":{
                        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                        "logs":[
                            {
                                "category": "FunctionAppLogs",
                                "enabled": true,
                                "retentionPolicy": {
                                    "enabled": true,
                                    "days": 7
                                }
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('renewalAppInsightsName')]",
            "location": "[variables('Location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "IngestionMode": "ApplicationInsights",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('renewalSiteName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webServerName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', variables('serviceBusName'), variables('renewalTopicName'), concat(variables('renewalTopicName'), '-sub'))]",
                "[resourceId('Microsoft.Insights/components', variables('renewalAppInsightsName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('renewalSiteName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('renewalSiteName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('webServerName'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "application_group",
                            "value":"[variables('resourcesNamespace')]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsServiceBusConnection",
                            "value": "[concat('Endpoint=sb://', variables('serviceBusName'), '.servicebus.windows.net/;SharedAccessKeyName=', variables('authorizationRulesName') ,';SharedAccessKey=', listKeys(resourceId('Microsoft.ServiceBus/namespaces/AuthorizationRules', variables('serviceBusName'), variables('authorizationRulesName')), '2017-04-01').primaryKey)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "JAVA_OPTS",
                            "value":"-Dfile.encoding=UTF-8"
                        },
                        {
                            "name": "config_basepath",
                            "value": "[concat('az:', variables('applicationConfigBucket'))]"
                        },
                        {
                            "name":"cs_ddt_prefix",
                            "value":"[variables('resourcesNamespace')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_JAVA_LOAD_APP_LIBS",
                            "value": "1"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "java"
                        },
                        {
                            "name": "lambda_profile",
                            "value": "[parameters('EnvironmentStage')]"
                        },
                        {
                            "name": "storage_accountname",
                            "value": "[variables('storageAccountName')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
                        },
                        {
                            "name": "api_base_url",
                            "value": "[concat('https://', variables('renewalSiteName'), '.azurewebsites.net', variables('apiVersion'))]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('renewalAppInsightsName')), '2020-02-02-preview').InstrumentationKey]"

                        },
                        {
                            "name": "etl_renewal_manager_schedule",
                            "value": "0 */2 * * * *"
                        },
                        {
                            "name": "etl_renewal_worker_subscription",
                            "value": "[concat(variables('renewalTopicName'), '-sub')]"
                        },
                        {
                            "name": "etl_renewal_worker_topic",
                            "value": "[variables('renewalTopicName')]"
                        },
                        {
                            "name": "service_id",
                            "value": "[variables('renewalSiteName')]"
                        },
                        {
                            "name": "service_name",
                            "value": "[variables('renewalSiteName')]"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            },
            "resources": [
                {
                    "type": "Extensions",
                    "apiVersion": "2018-11-01",
                    "name": "MSDeploy",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('renewalSiteName'))]"
                    ],
                    "properties": {
                        "packageUri": "https://github.com/Prosperoware/cam-azure-deployment/raw/master/etl-renewal.zip",
                        "setParameters": {
                        }
                    }
                },
                {  
                    "type":"Microsoft.Web/sites/providers/diagnosticsettings",
                    "apiVersion": "2017-05-01-preview",
                    "location": "[variables('location')]",
                    "name":"[concat(variables('renewalSiteName'), '/Microsoft.Insights/function-logs')]",
                    "dependsOn":[  
                        "[resourceId('Microsoft.Web/sites', variables('renewalSiteName'))]",
                        "[concat('Microsoft.Web/Sites/', variables('renewalSiteName'), '/Extensions/MSDeploy')]"
                    ],
                    "properties":{
                        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                        "logs":[
                            {
                                "category": "FunctionAppLogs",
                                "enabled": true,
                                "retentionPolicy": {
                                    "enabled": true,
                                    "days": 7
                                }
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('mappingAppInsightsName')]",
            "location": "[variables('Location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "IngestionMode": "ApplicationInsights",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('mappingSiteName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webServerName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', variables('serviceBusName'), variables('mappingTopicName'), concat(variables('mappingTopicName'), '-sub'))]",
                "[resourceId('Microsoft.Insights/components', variables('mappingAppInsightsName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('mappingSiteName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('mappingSiteName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('webServerName'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "application_group",
                            "value":"[variables('resourcesNamespace')]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "JAVA_OPTS",
                            "value":"-Dfile.encoding=UTF-8"
                        },
                        {
                            "name": "AzureWebJobsServiceBusConnection",
                            "value": "[concat('Endpoint=sb://', variables('serviceBusName'), '.servicebus.windows.net/;SharedAccessKeyName=', variables('authorizationRulesName') ,';SharedAccessKey=', listKeys(resourceId('Microsoft.ServiceBus/namespaces/AuthorizationRules', variables('serviceBusName'), variables('authorizationRulesName')), '2017-04-01').primaryKey)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "config_basepath",
                            "value": "[concat('az:', variables('applicationConfigBucket'))]"
                        },
                        {
                            "name":"cs_ddt_prefix",
                            "value":"[variables('resourcesNamespace')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_JAVA_LOAD_APP_LIBS",
                            "value": "1"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "java"
                        },
                        {
                            "name": "lambda_profile",
                            "value": "[parameters('EnvironmentStage')]"
                        },
                        {
                            "name": "storage_accountname",
                            "value": "[variables('storageAccountName')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
                        },
                        {
                            "name": "api_base_url",
                            "value": "[concat('https://', variables('mappingSiteName'), '.azurewebsites.net', variables('apiVersion'))]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('mappingAppInsightsName')), '2020-02-02-preview').InstrumentationKey]"

                        },
                        {
                            "name": "etl_mapping_worker_subscription",
                            "value": "[concat(variables('mappingTopicName'), '-sub')]"
                        },
                        {
                            "name": "etl_mapping_worker_topic",
                            "value": "[variables('mappingTopicName')]"
                        },
                        {
                            "name": "etl_mappingjob_manager_schedule",
                            "value": "0 */2 * * * *"
                        },
                        {
                            "name": "service_id",
                            "value": "[variables('mappingSiteName')]"
                        },
                        {
                            "name": "service_name",
                            "value": "[variables('mappingSiteName')]"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            },
            "resources": [
                {
                    "type": "Extensions",
                    "apiVersion": "2018-11-01",
                    "name": "MSDeploy",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('mappingSiteName'))]"
                    ],
                    "properties": {
                        "packageUri": "https://github.com/Prosperoware/cam-azure-deployment/raw/master/etl-mapping.zip",
                        "setParameters": {
                        }
                    }
                },
                {  
                    "type":"Microsoft.Web/sites/providers/diagnosticsettings",
                    "apiVersion": "2017-05-01-preview",
                    "location": "[variables('location')]",
                    "name":"[concat(variables('mappingSiteName'), '/Microsoft.Insights/function-logs')]",
                    "dependsOn":[  
                        "[resourceId('Microsoft.Web/sites', variables('mappingSiteName'))]",
                        "[concat('Microsoft.Web/Sites/', variables('mappingSiteName'), '/Extensions/MSDeploy')]"
                    ],
                    "properties":{
                        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                        "logs":[
                            {
                                "category": "FunctionAppLogs",
                                "enabled": true,
                                "retentionPolicy": {
                                    "enabled": true,
                                    "days": 7
                                }
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('processAppInsightsName')]",
            "location": "[variables('Location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "IngestionMode": "ApplicationInsights",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('processSiteName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webServerName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/queues', variables('serviceBusName'), variables('queueName'))]",
                "[resourceId('Microsoft.Insights/components', variables('processAppInsightsName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('processSiteName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('processSiteName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('webServerName'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "application_group",
                            "value":"[variables('resourcesNamespace')]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsServiceBusConnection",
                            "value": "[concat('Endpoint=sb://', variables('serviceBusName'), '.servicebus.windows.net/;SharedAccessKeyName=', variables('authorizationRulesName') ,';SharedAccessKey=', listKeys(resourceId('Microsoft.ServiceBus/namespaces/AuthorizationRules', variables('serviceBusName'), variables('authorizationRulesName')), '2017-04-01').primaryKey)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "cam_log_debug",
                            "value": "false"
                        },
                        {
                            "name": "config_basepath",
                            "value": "[concat('az:', variables('applicationConfigBucket'))]"
                        },
                        {
                            "name":"cs_ddt_prefix",
                            "value":"[variables('resourcesNamespace')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_JAVA_LOAD_APP_LIBS",
                            "value": "1"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "java"
                        },
                        {
                            "name": "JAVA_OPTS",
                            "value":"-Dfile.encoding=UTF-8"
                        },
                        {
                            "name": "lambda_profile",
                            "value": "[parameters('EnvironmentStage')]"
                        },
                        {
                            "name": "storage_accountname",
                            "value": "[variables('storageAccountName')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
                        },
                        {
                            "name": "api_base_url",
                            "value": "[concat('https://', variables('mappingSiteName'), '.azurewebsites.net', variables('apiVersion'))]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('processAppInsightsName')), '2020-02-02-preview').InstrumentationKey]"

                        },
                        {
                            "name": "etl_mapping_worker_subscription",
                            "value": "[concat(variables('mappingTopicName'), '-sub')]"
                        },
                        {
                            "name": "etl_job_process_dl_schedule",
                            "value": "0 */59 * * * *"
                        },
                        {
                            "name": "etl_job_process_queue",
                            "value": "[variables('queueName')]"
                        },
                        {
                            "name": "etlJobProcessHandler_timeout_sec",
                            "value": "600"
                        },
                        {
                            "name": "safe_remaining_time",
                            "value": "60"
                        },
                        {
                            "name": "service_id",
                            "value": "[variables('processSiteName')]"
                        },
                        {
                            "name": "service_name",
                            "value": "[variables('processSiteName')]"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            },
            "resources":[
                {
                    "type": "Extensions",
                    "apiVersion": "2018-11-01",
                    "name": "MSDeploy",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('processSiteName'))]"
                    ],
                    "properties": {
                        "packageUri": "https://github.com/Prosperoware/cam-azure-deployment/raw/master/etl-process.zip",
                        "setParameters": {
                        }
                    }
                },
                {  
                    "type":"Microsoft.Web/sites/providers/diagnosticsettings",
                    "apiVersion": "2017-05-01-preview",
                    "location": "[variables('location')]",
                    "name":"[concat(variables('processSiteName'), '/Microsoft.Insights/function-logs')]",
                    "dependsOn":[  
                        "[resourceId('Microsoft.Web/sites', variables('processSiteName'))]",
                        "[concat('Microsoft.Web/Sites/', variables('processSiteName'), '/Extensions/MSDeploy')]"
                    ],
                    "properties":{
                        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                        "logs":[
                            {
                                "category": "FunctionAppLogs",
                                "enabled": true,
                                "retentionPolicy": {
                                    "enabled": true,
                                    "days": 7
                                }
                            }
                        ]
                    }
                }
            ]
        }
       

    ]
}
