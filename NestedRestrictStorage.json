{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
     "parameters": {
         "Deploymenttype": {
            "type": "string",
            "allowedValues": [ "Standard", "Premium"]
        },
        "ServiceBusResourceId":{
             "type": "string",
            "minLength": 36,
            "metadata": {
                "description": "Prosperoware Tenant Id will be provided by Prosperoware. Make sure to get the key before starting the installation."
            }
        },
        "EnvironmentStage": {
            "type": "string",
            "allowedValues": [ "dev", "qa", "stg", "prod" ]
        },
        "InstanceUniqueName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 11
        },
        "TopLevelDomain": {
            "type": "string",
            "allowedValues": [ "io", "eu", "com", "co.uk" ]
        },
        "administratorLogin": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "MySQL Database administrator login name"
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "minLength": 8,
            "maxLength": 128,
            "metadata": {
                "description": "MySQL Database administrator password"
            }
        },
         "vnetName": {
            "type": "string",
            "defaultValue": "VNet1",
            "metadata": {
              "description": "VNet name"
            }
        },
          "subnet1Name": {
            "type": "string",
            "defaultValue": "Subnet1",
            "metadata": {
              "description": "Subnet 1 Name"
            }
        },
          "subnet2Name": {
            "type": "string",
            "defaultValue": "Subnet2",
            "metadata": {
              "description": "Subnet 2 Name"
            }
        },
        "Features": {
            "type": "string",
            "allowedValues": [ "ETL", "Content Sync", "Both" ]
        },
        "ProsperowareTenantId": {
            "type": "string",
            "minLength": 36,
            "metadata": {
                "description": "Prosperoware Tenant Id will be provided by Prosperoware. Make sure to get the key before starting the installation."
            }
        },
        "ProsperowareEncryptedKey": {
            "type": "securestring",
            "minLength": 32,
            "metadata": {
                "description": "This encrypted Key will be provided by Prosperoware. Make sure to get the key before starting the installation."
            }
        },
        "ProsperowareSecretKey": {
            "type": "securestring",
            "minLength": 32,
            "metadata": {
                "description": "This secret Key will be provided by Prosperoware. Make sure to get the key before starting the installation."
            }
        },
        "branch": {	
            "type": "string",	
            "metadata": {	
              "description": "branch"	
            }	
        },	
        "repo": {	
            "type": "string",	
            "metadata": {	
              "description": "repo"	
            }	
        },
		"serverfarmresourceid": {
			"type": "string",
			"metadata": {
				"description": "Server farm resource id"
			}
		}
    },
    "variables": {
        "commonId": "[concat(parameters('InstanceUniqueName'), parameters('EnvironmentStage'), replace(parameters('TopLevelDomain'), '.', ''))]",
        "resourcesNamespace": "[concat(parameters('InstanceUniqueName'), parameters('EnvironmentStage'), '-', replace(parameters('TopLevelDomain'), '.', ''))]",
        "storageAccountName": "[concat('strg',variables('commonId'))]",
        "applicationConfigBucket": "[concat(variables('resourcesNamespace'), '-application-config')]",
        "mySqlServerName": "[concat('mysql-', variables('resourcesNamespace'))]",
        "cosmosName": "[concat('cosmos-', variables('resourcesNamespace'))]",
        "serviceBusName": "[concat('servicebus-', variables('resourcesNamespace'))]",
        "cosmosTenantdb": "[concat(variables('resourcesNamespace'),'-contentsync-tenant')]",
        "etlQueueName": "[concat(variables('resourcesNamespace'), '-etl-process-v1')]",
        "csQueueName": "[concat(variables('resourcesNamespace'), '-job-process-v1')]",
        "etlRenewalTopicName": "[concat(variables('resourcesNamespace'), '-etl_renewal_worker_start')]",
        "etlMappingTopicName": "[concat(variables('resourcesNamespace'), '-etl_mapping_worker_start')]",
        "etlActionTopicName": "[concat(variables('resourcesNamespace'), '-etl_document_action')]",
        "webServerName": "[concat(variables('resourcesNamespace'), '-api-app-srvr')]",
        "etlApiAppName": "[concat(variables('resourcesNamespace'), '-etl-api')]",
        "etlRenewalAppName": "[concat(variables('resourcesNamespace'), '-etl-renewal')]",
        "etlMappingAppName": "[concat(variables('resourcesNamespace'), '-etl-mapping')]",
        "etlProcessAppName": "[concat(variables('resourcesNamespace'), '-etl-process')]",
        "etlActionAppName": "[concat(variables('resourcesNamespace'), '-etl-action')]",
        "configAppName": "[concat(variables('resourcesNamespace'), '-etl-config')]",
        "csApiAppName": "[concat(variables('resourcesNamespace'), '-contentsync-api')]",
        "csProcessAppName": "[concat(variables('resourcesNamespace'), '-contentsync-process')]",
        "csRetryAppName": "[concat(variables('resourcesNamespace'), '-contentsync-retry')]",
        "Location": "[resourceGroup().location]",
        "apiVersion": "/api/v1",
        "authorizationRulesName": "RootManageSharedAccessKey",
        "etlApiAppInsightsName": "[concat(variables('resourcesNamespace'), '-etl-api')]",
        "etlRenewalAppInsightsName": "[concat(variables('resourcesNamespace'), '-etl-renewal')]",
        "etlMappingAppInsightsName": "[concat(variables('resourcesNamespace'), '-etl-mapping')]",
        "etlProcessAppInsightsName": "[concat(variables('resourcesNamespace'), '-etl-process')]",
        "etlActionAppInsightsName": "[concat(variables('resourcesNamespace'), '-etl-action')]",
        "configAppInsightsName": "[concat(variables('resourcesNamespace'), '-etl-config')]",
        "csApiAppInsightsName": "[concat(variables('resourcesNamespace'), '-contentsync-api')]",
        "csProcessAppInsightsName": "[concat(variables('resourcesNamespace'), '-contentsync-process')]",
        "csRetryAppInsightsName": "[concat(variables('resourcesNamespace'), '-contentsync-retry')]",
        "isETL": "[or(equals(parameters('Features'), 'ETL'), equals(parameters('Features'), 'Both'))]",
        "isCS": "[or(equals(parameters('Features'), 'Content Sync'), equals(parameters('Features'), 'Both'))]"
    },
    "resources": [
		//STORAGEACCOUNT SET VNET ONLY IN PREMIUM DEPLOYMENT
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-06-01",
            "name": "[variables('storageAccountName')]",
			"condition": "[equals(parameters('Deploymenttype'),'Premium')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnet1Name'))]",
                            "action": "Allow"
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnet2Name'))]",
                            "action": "Allow"
                        }
                    ],
                    "ipRules": [],
                    "resourceAccessRules": [],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "defaultToOAuthAuthentication": false,
                "allowCrossTenantReplication": true,
                "accessTier": "Hot"
            }
        }
    ],
    "outputs": {
       
    }
}
